{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0}],"Cache":[{"_id":"source/favicon.ico","hash":"bc4575713d5905501315801cc9d52d8fc2b43178","modified":1469893118000},{"_id":"source/_posts/Java内存区域.md","hash":"238363279ad71ab1c5e915cff957a485dc62bc3a","modified":1471188124000},{"_id":"source/_posts/.《函数式编程思维》读书笔记.md.swp","hash":"e367e02cd088526317b444450acb53766985e388","modified":1475126107000},{"_id":"source/_posts/ThreadLocal小记.md","hash":"1ca1eaa05099e1f116f08e289ca3a2b1722ca85d","modified":1473593939000},{"_id":"source/_posts/HTML与CSS小记.md","hash":"e2748c4330ecf4d48997079afa7c1d44df9b8fe5","modified":1469963989000},{"_id":"source/_posts/《Java并发编程实战》读书笔记.md","hash":"033e79c32e98cf613523f359cc33e8fc129ed15d","modified":1475126604000},{"_id":"source/_posts/《函数式编程思维》读书笔记.md","hash":"b3d9ce43d94f8650f1418d501b92a81ae7eb827e","modified":1472308503000},{"_id":"source/categories/index-1.md","hash":"32c65ffdc4b2b07d95bf52ca7331e2dfa8b84a60","modified":1469962367000},{"_id":"source/categories/index-2.md","hash":"01c6269ba8f66017829598c89ce35b0fcf041249","modified":1472307572000},{"_id":"source/categories/index.md","hash":"265279f98f069e929ce7a682d3d80f30df999a43","modified":1469890119000},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1469886538000},{"_id":"themes/next/.gitignore","hash":"c8d6a73b9e17f0f8a3716e4ada6960d3180425a6","modified":1469886538000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1469886538000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1469886538000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1469886538000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1469886538000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1469886538000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1469886538000},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1469886538000},{"_id":"themes/next/_config.yml","hash":"87dd7d51109b202fd181448c2abb49ef335a7647","modified":1469890867000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1469886538000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1469886538000},{"_id":"source/tags/index-1.md","hash":"15f2af37c1cdc21f3dcc572d8017099646cdd617","modified":1469963920000},{"_id":"source/tags/index-2.md","hash":"cf3e574ba065f16e24d019b51eade2060d3c1c62","modified":1469963974000},{"_id":"source/tags/index-3.md","hash":"2bcb7dc8521f2e013f0cd2f49d3b0f52917fa96c","modified":1472306606000},{"_id":"source/tags/index-4.md","hash":"751f69598690223422467db912b81e623d805a88","modified":1472306617000},{"_id":"source/tags/index.md","hash":"7b78e54ef8023d86641b636f341196330582d695","modified":1469888981000},{"_id":"source/tags/index-5.md","hash":"da17106467a5adc108e9fad7e0f04160a557a185","modified":1472307047000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1469886538000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1469886538000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1469885645000},{"_id":"themes/next/.git/index","hash":"e3cb0c97ebc630669b2fe32ac576980afdb92f8e","modified":1469886601000},{"_id":"themes/next/.git/packed-refs","hash":"c260c6d28e96faeec8fe2ead52f6103d079e2f0c","modified":1469886538000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1469886538000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1469886538000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1469886538000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1469886538000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1469886538000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1469886538000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1469886538000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1469886538000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1469886538000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1469886538000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1469886538000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1469886538000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1469886538000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1469886538000},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1469886538000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1469886538000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1469886538000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1469886538000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1469886538000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1469886538000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1469886538000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1469886538000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1469886538000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1469886538000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1469886538000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469886538000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1469885645000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1469885645000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1469885645000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1469885645000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1469885645000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1469885645000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1469885645000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1469885645000},{"_id":"themes/next/.git/logs/HEAD","hash":"fa1dbfa843c747b51ff6d52cf1fcf0b097513714","modified":1469886538000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1469885645000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1469885645000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1469886538000},{"_id":"themes/next/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1469886538000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1469886538000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1a77843ce5eac62151dc3d38f0a36c43e19e1a74","modified":1469886538000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1469886538000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1469886538000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"b73f9443bee2d3ea383aad52e49ffca8aa97dcc2","modified":1469886538000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4fe588ff8ba8587885c2936db2df490774f89e10","modified":1469886538000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1469886538000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b0c495b8154ef8b2d2cb0a554e164ff22cdc962","modified":1469886538000},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1469886538000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1469886538000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1469886538000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1469886538000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1469886538000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1469886538000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1469886538000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1469886538000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1469886538000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1469886538000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1469886538000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1469886538000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1469886538000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1469886538000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1469886538000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1469886538000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1469886538000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1469886538000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1469886538000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1469886538000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1469886538000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1469886538000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1469886538000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469886538000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469886538000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469886538000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469886538000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469886538000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469886538000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1469886538000},{"_id":"themes/next/.git/refs/heads/master","hash":"283a77b25951fbb3b2f10b4be4c80b6519ac6011","modified":1469886538000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1469886538000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1469886538000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1469886538000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1469886538000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1469886538000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1469886538000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1469886538000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1469886538000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1469886538000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"7f7148c8f52e4d3cfc070d964160362179fa8e91","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1469886538000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1469886538000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1469886538000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1469886538000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1469886538000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1469886538000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1469886538000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1469886538000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1469886538000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1469886538000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1469886538000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1469886538000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1469886538000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1469886538000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1469886538000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1469886538000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1469886538000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1469886538000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1469886538000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1469886538000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1469886538000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1469886538000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1469886538000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1469886538000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1469886538000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1469886538000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1469886538000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1469886538000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1469886538000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1469886538000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1469886538000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"fa1dbfa843c747b51ff6d52cf1fcf0b097513714","modified":1469886538000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1469886538000},{"_id":"themes/next/.git/objects/pack/pack-e00f886c9514837626bc8d3993103c1a358412f3.idx","hash":"3f14696ebf407e84c94a306793b234758b4fbdfa","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"f9c6ee91c2a615edd8ca26edcc8a66b71883c238","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1469886538000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1469886538000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1469886538000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1469886538000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1469886538000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1469886538000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1469886538000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1469886538000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1469886538000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1469886538000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1469886538000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1469886538000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1469886538000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"fa1dbfa843c747b51ff6d52cf1fcf0b097513714","modified":1469886538000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1469886538000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1469886538000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1469886538000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1469886538000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1469886538000},{"_id":"themes/next/source/images/avatar.png","hash":"9b1c328be2868cd82320037820b2a1b89be37a37","modified":1469888010000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1469886538000},{"_id":"themes/next/.git/objects/pack/pack-e00f886c9514837626bc8d3993103c1a358412f3.pack","hash":"e71ec38f27723a63ccd2acb7754e5aa948cdbc5e","modified":1469886538000},{"_id":"public/search.xml","hash":"edb9a83a72d9abfefb9523327ed883635726b7fe","modified":1475126662396},{"_id":"public/categories/index-1.html","hash":"bd14e8993d5f9e3b5f1f99dd5092f69f7033d960","modified":1475126662458},{"_id":"public/categories/index-2.html","hash":"2d9ffe0d7215dbb81f0451e4f920c1973e63ef02","modified":1475126662459},{"_id":"public/categories/index.html","hash":"34a6dae2b444d31f5ca161eba0f569d4589d87a3","modified":1475126662459},{"_id":"public/tags/index-1.html","hash":"3ded3fadb2f8abb3e1b77b01e61b2a047e99a841","modified":1475126662459},{"_id":"public/tags/index-3.html","hash":"158a7789b2e74150cd99217ec37f0c15989d07ff","modified":1475126662459},{"_id":"public/tags/index-4.html","hash":"d0022f0f5dc33ceb2d4f6d1c62fcaaff935aed62","modified":1475126662459},{"_id":"public/tags/index-2.html","hash":"c65aea27835a4b54de761945c2cef68d3951d115","modified":1475126662459},{"_id":"public/tags/index.html","hash":"7a5380cd6a5d16a1e8e8d08f8ae6b2a2ec9f81bf","modified":1475126662459},{"_id":"public/tags/index-5.html","hash":"c4e3a97ef902f45b12d5225bf29e17230def9107","modified":1475126662459},{"_id":"public/archives/2016/07/index.html","hash":"99dbb4ed02ca487055fea43882b97f897a32ec8b","modified":1475126662460},{"_id":"public/categories/前端/index.html","hash":"ea951f1310a0151ec02614e1fe70eade408ffa74","modified":1475126662460},{"_id":"public/categories/Java/index.html","hash":"ad39a76a5cd14e2254f6697dd45a663d91efdb75","modified":1475126662460},{"_id":"public/categories/读书笔记/index.html","hash":"5b4497e0e8ce53e90afa789957802f9d6992adb8","modified":1475126662460},{"_id":"public/tags/HTML/index.html","hash":"2ce762be9be3f012f2d756072205f8de99223eed","modified":1475126662460},{"_id":"public/tags/CSS/index.html","hash":"09db899a24d327b41361acbab81d7de7eff582f9","modified":1475126662460},{"_id":"public/tags/daily/index.html","hash":"d0c5c43dce9ee8a90cabb75b131263aa728e4e1b","modified":1475126662460},{"_id":"public/tags/JVM/index.html","hash":"0c231715fe65f7fe0a370205bf37ba5097b70d50","modified":1475126662460},{"_id":"public/tags/Functional/index.html","hash":"a2922507064b3d5cab38cd2da078c05df6bef0d7","modified":1475126662460},{"_id":"public/2016/09/11/ThreadLocal小记/index.html","hash":"e94bb29cdb2adaa2ec2475675574ceff72ac3e6b","modified":1475126662460},{"_id":"public/2016/08/27/《函数式编程思维》读书笔记/index.html","hash":"441f9364206fb309687eaf1c5fcb88289f0a753e","modified":1475126662460},{"_id":"public/2016/08/14/Java内存区域/index.html","hash":"c53bdcea6e8da7a84d114dc3e359b884b0d8f587","modified":1475126662460},{"_id":"public/2016/07/31/HTML与CSS小记/index.html","hash":"94056c56f1a0798af848e4dba147b6662fd7c9f7","modified":1475126662460},{"_id":"public/archives/index.html","hash":"bf27e91cd617827ec1e2c35d680d5e614f43027a","modified":1475126662460},{"_id":"public/archives/2016/index.html","hash":"cc2506a907733790822891afcacc8386c6615728","modified":1475126662461},{"_id":"public/archives/2016/08/index.html","hash":"8a3002af978ec3b0ca1ffb485f4ca29a8c6b609e","modified":1475126662461},{"_id":"public/archives/2016/09/index.html","hash":"68a6ac183a6998875e9aa014a04a9fa5c0180d1d","modified":1475126662461},{"_id":"public/index.html","hash":"820702eb090ed7c39ea9e89cdf980ad7ba91f2e0","modified":1475126662461},{"_id":"public/tags/Java/index.html","hash":"b22fdffa7bf892d42c8171b03a2710b9894cf24b","modified":1475126662461},{"_id":"public/2016/09/29/《Java并发编程实战》读书笔记/index.html","hash":"c443be0073f4ef5b6feeb72458fd7ca511a99729","modified":1475126662463},{"_id":"source/CNAME","hash":"00d09eae4324f411e01562979a81eb9702aa0a16","modified":1475127538000},{"_id":"public/CNAME","hash":"00d09eae4324f411e01562979a81eb9702aa0a16","modified":1475127592678}],"Category":[{"name":"前端","_id":"citnw6vrp0005yn2epq5hctcv"},{"name":"Java","_id":"citnw6vrw000byn2exahv3r1n"},{"name":"读书笔记","_id":"citnw6vs1000iyn2e6cqyyrao"}],"Data":[],"Page":[{"title":"前端","date":"2016-07-31T10:50:48.000Z","type":"categories","comments":0,"_content":"","source":"categories/index-1.md","raw":"---\ntitle: 前端\ndate: 2016-07-31 18:50:48\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-07-31T10:52:47.000Z","path":"categories/index-1.html","layout":"page","_id":"citnw6vrd0001yn2eojnkm5xo","content":"","excerpt":"","more":""},{"title":"读书笔记","date":"2016-08-27T14:15:37.000Z","type":"categories","comments":0,"_content":"","source":"categories/index-2.md","raw":"---\ntitle: 读书笔记\ndate: 2016-08-27 22:15:37\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-08-27T14:19:32.000Z","path":"categories/index-2.html","layout":"page","_id":"citnw6vrh0003yn2erwg6q97q","content":"","excerpt":"","more":""},{"title":"Java","date":"2016-07-30T14:47:23.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: Java\ndate: 2016-07-30 22:47:23\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-07-30T14:48:39.000Z","path":"categories/index.html","layout":"page","_id":"citnw6vrs0007yn2exim4jjsk","content":"","excerpt":"","more":""},{"title":"HTML","date":"2016-07-31T11:10:04.000Z","type":"tags","comments":0,"_content":"","source":"tags/index-1.md","raw":"---\ntitle: HTML\ndate: 2016-07-31 19:10:04\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-07-31T11:18:40.000Z","path":"tags/index-1.html","layout":"page","_id":"citnw6vsw000yyn2e7az7dqkv","content":"","excerpt":"","more":""},{"title":"JVM","date":"2016-08-14T15:09:22.000Z","type":"tags","comments":0,"_content":"","source":"tags/index-3.md","raw":"---\ntitle: JVM\ndate: 2016-08-14 23:09:22\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-08-27T14:03:26.000Z","path":"tags/index-3.html","layout":"page","_id":"citnw6vsx000zyn2ecjuz00ty","content":"","excerpt":"","more":""},{"title":"Java","date":"2016-08-14T15:14:08.000Z","type":"tags","comments":0,"_content":"","source":"tags/index-4.md","raw":"---\ntitle: Java\ndate: 2016-08-14 23:14:08\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-08-27T14:03:37.000Z","path":"tags/index-4.html","layout":"page","_id":"citnw6vsy0010yn2ehee3tasi","content":"","excerpt":"","more":""},{"title":"CSS","date":"2016-07-31T11:18:55.000Z","type":"tags","comments":0,"_content":"","source":"tags/index-2.md","raw":"---\ntitle: CSS\ndate: 2016-07-31 19:18:55\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-07-31T11:19:34.000Z","path":"tags/index-2.html","layout":"page","_id":"citnw6vt30011yn2ewm928rux","content":"","excerpt":"","more":""},{"title":"daily","date":"2016-07-30T14:27:10.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: daily\ndate: 2016-07-30 22:27:10\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-07-30T14:29:41.000Z","path":"tags/index.html","layout":"page","_id":"citnw6vt50012yn2epm9ak33j","content":"","excerpt":"","more":""},{"title":"Functional","date":"2016-08-27T14:01:31.000Z","_content":"","source":"tags/index-5.md","raw":"---\ntitle: Functional\ndate: 2016-08-27 22:01:31\n---\n","updated":"2016-08-27T14:10:47.000Z","path":"tags/index-5.html","comments":1,"layout":"page","_id":"citnw6vt60013yn2ekdqjj54x","content":"","excerpt":"","more":""}],"Post":[{"title":"HTML与CSS小记","date":"2016-07-31T10:54:52.000Z","_content":"\n![jjj](https://ooo.0o0.ooo/2016/07/31/579dd779d1389.png)","source":"_posts/HTML与CSS小记.md","raw":"---\ntitle: HTML与CSS小记\ndate: 2016-07-31 18:54:52\ntags: \n  - HTML\n  - CSS\ncategories: 前端\n\n---\n\n![jjj](https://ooo.0o0.ooo/2016/07/31/579dd779d1389.png)","slug":"HTML与CSS小记","published":1,"updated":"2016-07-31T11:19:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citnw6vr80000yn2esx1ygs4f","content":"<p><img src=\"https://ooo.0o0.ooo/2016/07/31/579dd779d1389.png\" alt=\"jjj\"></p>\n","excerpt":"","more":"<p><img src=\"https://ooo.0o0.ooo/2016/07/31/579dd779d1389.png\" alt=\"jjj\"></p>\n"},{"title":"Java内存区域","date":"2016-08-14T15:02:39.000Z","_content":"\n![Java内存区域.png](https://ooo.0o0.ooo/2016/08/14/57b08be587b3a.png)\n","source":"_posts/Java内存区域.md","raw":"---\ntitle: Java内存区域\ndate: 2016-08-14 23:02:39\ntags:\n  - daily\n  - JVM\n  - Java\ncategories: Java\n\n---\n\n![Java内存区域.png](https://ooo.0o0.ooo/2016/08/14/57b08be587b3a.png)\n","slug":"Java内存区域","published":1,"updated":"2016-08-14T15:22:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citnw6vre0002yn2e0gy78ce5","content":"<p><img src=\"https://ooo.0o0.ooo/2016/08/14/57b08be587b3a.png\" alt=\"Java内存区域.png\"></p>\n","excerpt":"","more":"<p><img src=\"https://ooo.0o0.ooo/2016/08/14/57b08be587b3a.png\" alt=\"Java内存区域.png\"></p>\n"},{"title":"ThreadLocal小记","date":"2016-09-11T11:33:39.000Z","_content":"\n# ThreadLocal\n\n最近《Java并发编程实战》第三章谈及了对象共享的问题。对共享的可变数据最简单粗暴的做法当然是同步，但是同步的缺点也很明显，代码复杂可维护性降低。针对这个问题，书上谈及到了通过线程封闭避免同步，其中的ThreadLocal类就是帮助维持线程封闭性的。\n\n之前对ThreadLocal的认识非常简单，就是把一个变量绑定到线程上。参照网上的例子自己也实现了类似功能的例子ThreadLocalVariable(https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/thread/ThreadLocalVariable.java)，但总的来说没什么体会。今天参照别人的文章看了一下ThreadLocal的实现，发现还是有蛮多注意点的。\n\n看JDK之前想当然的以为ThreadLocal应该就是简单对`Map<Thread, Object>`做一个封装，然而实际并没有这么简单。参照了网上一些文章的说法，早期的ThreadLocal确实是这样实现的。但是这样实现存在一些问题：\n\n1. 线程安全问题，如果使用线程安全的Map实现那么就会带来性能问题，当有大量的线程使用ThreadLocal，伴随着线程生命周期ThreadLocal也需要频繁向底层的Map添加删除数据。\n2. 内存回收问题，用Thread当key，除非手动调用remove，否则即使线程退出了会导致：1)该Thread对象无法回收；2)该线程在所有ThreadLocal中对应的value也无法回收。\n\nThreadLocal实际给出了不同的实现方式。首先绑定到线程的变量没有维护在ThreadLocal内，而是维护在各个Thread类实例内——在Thread类内使用了ThreadLocal的静态内部类`ThreadLocalMap`实例去维护需要绑定到线程的变量。这样原本需要维护在ThreadLocal内的数据现在就分散到了各个线程内去维护。\n\n\n\n在Thread中ThreadLocalMap的声明长这样：\n\n```java\n// 真的就只是声明了一下，什么都没干    \nThreadLocal.ThreadLocalMap threadLocals = null;\n```\n\n\n\nThreadLocal一共只有五个非私有的方法，首先是两个并没有什么卵用的方法：\n\n```java\n// 构造，什么都没干\npublic ThreadLocal() {}\n\n// 设置ThreadLocal的初始值，protected很明显是希望子类重写\nprotected T initialValue() {return null}\n```\n\n看看其余三个方法的实现（JDK8）\n\n```java\n    public T get() {\n        Thread t = Thread.currentThread();\n        // 从线程里获取ThreadLocalMap\n        ThreadLocalMap map = getMap(t);\n        if (map != null) {\n            // 根据ThreadLocal实例获取Entity\n            // 一会看ThreadLocal的实现\n            // 暂时可以看做类似Map<ThreadLocal,Object>\n            // 注意key类型是ThreadLocal，不是Thread\n            ThreadLocalMap.Entry e = map.getEntry(this);\n            if (e != null) {\n                @SuppressWarnings(\"unchecked\")\n                T result = (T)e.value;\n                return result;\n            }\n        }\n        // 如果获得的map为null或者从map通过key获取的value为空时获取一个初始值\n        // setInitialValue方法里调用了initialValue方法\n        // 宝宝不管，反正宝宝想要有值，宝宝不想为null\n        return setInitialValue();\n    }\n\n    public void set(T value) {\n        Thread t = Thread.currentThread();\n        ThreadLocalMap map = getMap(t);\n        if (map != null)\n            // 没什么说的set进去\n            map.set(this, value);\n        else\n            // 当map不存在时，使用初始值创建一个\n            createMap(t, value);\n    }\n\n     public void remove() {\n         ThreadLocalMap m = getMap(Thread.currentThread());\n         if (m != null)\n             // 没什么说的，remove掉\n             m.remove(this);\n     }\n    \n    ThreadLocalMap getMap(Thread t) {\n        // 你给我一个线程，我换你一个map\n        return t.threadLocals;\n    }\n```\nThreadLocal所有的操作都是围绕着内部类ThreadLocalMap的，ThreadLocal只是让ThreadLocalMap更加容易访问。咦，有点耳熟，没错外观模式。\n\n下面看一下ThreadLocal的静态内部类ThreadLocalMap，JDK文档对它的描述主要集中在一下几点：\n\n1. 是什么：定制的hash map用于维护本地线程变量\n2. 可见性：ThreadLocal之外没有任何方法可访问，Thread类使用它定义了私有属性\n3. 特殊性：为了管理大对象、长生命周期对象，使用WeakReference包装ThreadLocal对象作为key\n\n前面两点没什么好说的，主要是第三点：key使用了弱引用类型管理（关于弱引用可以先参考https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/jvm/reference/ReferenceTest.java，后面我会单独写文章记录Java引用的使用，先挖个坑）。\n\n![image](http://img.blog.csdn.net/20160121000731607)\n\n图片来自互联网，实线表示强引用，虚线表示弱引用。\n\n简而言之，一个对象在没有强引用引用，只有弱引用引用时，当GC发生这个对象就会被标记回收。将ThreadLocal对象设置成弱引用作为key的好处是显而易见：当ThreadLocal没有任何强引用引用时，只有ThreadLocalMap的Entry对它存在弱引用，这样GC的时候这个ThreadLocal对象就可以被回收了。但是这又带来了一个问题：Entry的key可能被回收了，但留下了一个并没有什么卵用的value。只要线程生命周期不结束，那么这个value对象始终保持了一个强引用链条：\n\nThread Ref -> Thread -> ThreadLocalMap -> Entry -> value\n\n当内存有大量驻留的线程时，因为强引用存在，GC始终无法回收，就导致了内存泄漏。\n\n真对这个问题ThreadLocalMap在实现的时候也采取了一些防护措施，比如ThreadLocalMap的get（set，remove方法也类似，限于篇幅不展开了）：\n\n```java\n    private Entry getEntry(ThreadLocal<?> key) {\n        // hash函数获取索引位置\n        int i = key.threadLocalHashCode & (table.length - 1);\n        Entry e = table[i];\n        if (e != null && e.get() == key)\n            // 命中了\n            return e;\n        else\n            // miss了\n            return getEntryAfterMiss(key, i, e);\n    }\n\n    private Entry getEntryAfterMiss(ThreadLocal<?> key, int i, Entry e) {\n        Entry[] tab = table;\n        int len = tab.length;\n\t\t\n        // 遍历table\n        while (e != null) {\n            ThreadLocal<?> k = e.get();\n            if (k == key)\n                // 找到了\n                return e;\n            if (k == null)\n                // 发现key为空（也就是上面描述的内存泄漏的情况），做删除\n                expungeStaleEntry(i);\n            else\n                // 找下一个Entty位置\n                i = nextIndex(i, len);\n            e = tab[i];\n        }\n        return null;\n    }\n```\n\n在get的过程中凡是碰到了key为null的Entry，这个Entry就会被擦除，从而避免内存泄漏。类似的思路在set，remove方法中都有实现。针对内存泄漏问题ThreadLocal实际是需要手动触发函数删除key为null的Entry，所以当不要再需要一个变量当定到线程时手动的remove还是很有必要的。\n\n\n\n最后，在网上看到对ThreadLocal有多种说法：ThreadLocal为解决多线程程序的并发问题提供了一种新的思路；ThreadLocal的目的是为了解决多线程访问资源时的共享问题。\n\n关于第一种说法我觉得是部分正确的，ThreadLocal将需要共享的对象封闭在了线程内确实解决了并发的一部分问题，但并不是万能的。比如重写initialValue方法时返回的是一个全局共享的对象，那实际上ThreadLocal只是把这个全局共享的对象又封装到了Thread对象里，ThreadLocal本身并没有做类似深拷贝的操作，因此这个变量依然是线程不安全的（逸出）。\n\n关于第二种说法，我觉得问题就比较大了。ThreadLocal根本不是为了线程间共享，实际是为了将状态封闭在线程内以确保线程安全。这样做确实带来了访问共享状态的便利，但这个状态的共享是在单个线程内的，而不是线程之间的。比如在action中将session对象绑定在线程内，在service、dao里都可以方便的共享，但所有的共享都是在单个的线程内部，而不是在多个的线程之间共享。\n\n\n\n参考资料：\n\n《Java并发编程实战》\n\nJDK8帮助手册\n\nhttp://qifuguang.me/2015/09/02/[Java%E5%B9%B6%E5%8F%91%E5%8C%85%E5%AD%A6%E4%B9%A0%E4%B8%83]%E8%A7%A3%E5%AF%86ThreadLocal/\n\nhttp://my.oschina.net/xianggao/blog/392440#navbar-header\n","source":"_posts/ThreadLocal小记.md","raw":"---\ntitle: ThreadLocal小记\ndate: 2016-09-11 19:33:39\ntags: Java\ncategories: Java\n---\n\n# ThreadLocal\n\n最近《Java并发编程实战》第三章谈及了对象共享的问题。对共享的可变数据最简单粗暴的做法当然是同步，但是同步的缺点也很明显，代码复杂可维护性降低。针对这个问题，书上谈及到了通过线程封闭避免同步，其中的ThreadLocal类就是帮助维持线程封闭性的。\n\n之前对ThreadLocal的认识非常简单，就是把一个变量绑定到线程上。参照网上的例子自己也实现了类似功能的例子ThreadLocalVariable(https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/thread/ThreadLocalVariable.java)，但总的来说没什么体会。今天参照别人的文章看了一下ThreadLocal的实现，发现还是有蛮多注意点的。\n\n看JDK之前想当然的以为ThreadLocal应该就是简单对`Map<Thread, Object>`做一个封装，然而实际并没有这么简单。参照了网上一些文章的说法，早期的ThreadLocal确实是这样实现的。但是这样实现存在一些问题：\n\n1. 线程安全问题，如果使用线程安全的Map实现那么就会带来性能问题，当有大量的线程使用ThreadLocal，伴随着线程生命周期ThreadLocal也需要频繁向底层的Map添加删除数据。\n2. 内存回收问题，用Thread当key，除非手动调用remove，否则即使线程退出了会导致：1)该Thread对象无法回收；2)该线程在所有ThreadLocal中对应的value也无法回收。\n\nThreadLocal实际给出了不同的实现方式。首先绑定到线程的变量没有维护在ThreadLocal内，而是维护在各个Thread类实例内——在Thread类内使用了ThreadLocal的静态内部类`ThreadLocalMap`实例去维护需要绑定到线程的变量。这样原本需要维护在ThreadLocal内的数据现在就分散到了各个线程内去维护。\n\n\n\n在Thread中ThreadLocalMap的声明长这样：\n\n```java\n// 真的就只是声明了一下，什么都没干    \nThreadLocal.ThreadLocalMap threadLocals = null;\n```\n\n\n\nThreadLocal一共只有五个非私有的方法，首先是两个并没有什么卵用的方法：\n\n```java\n// 构造，什么都没干\npublic ThreadLocal() {}\n\n// 设置ThreadLocal的初始值，protected很明显是希望子类重写\nprotected T initialValue() {return null}\n```\n\n看看其余三个方法的实现（JDK8）\n\n```java\n    public T get() {\n        Thread t = Thread.currentThread();\n        // 从线程里获取ThreadLocalMap\n        ThreadLocalMap map = getMap(t);\n        if (map != null) {\n            // 根据ThreadLocal实例获取Entity\n            // 一会看ThreadLocal的实现\n            // 暂时可以看做类似Map<ThreadLocal,Object>\n            // 注意key类型是ThreadLocal，不是Thread\n            ThreadLocalMap.Entry e = map.getEntry(this);\n            if (e != null) {\n                @SuppressWarnings(\"unchecked\")\n                T result = (T)e.value;\n                return result;\n            }\n        }\n        // 如果获得的map为null或者从map通过key获取的value为空时获取一个初始值\n        // setInitialValue方法里调用了initialValue方法\n        // 宝宝不管，反正宝宝想要有值，宝宝不想为null\n        return setInitialValue();\n    }\n\n    public void set(T value) {\n        Thread t = Thread.currentThread();\n        ThreadLocalMap map = getMap(t);\n        if (map != null)\n            // 没什么说的set进去\n            map.set(this, value);\n        else\n            // 当map不存在时，使用初始值创建一个\n            createMap(t, value);\n    }\n\n     public void remove() {\n         ThreadLocalMap m = getMap(Thread.currentThread());\n         if (m != null)\n             // 没什么说的，remove掉\n             m.remove(this);\n     }\n    \n    ThreadLocalMap getMap(Thread t) {\n        // 你给我一个线程，我换你一个map\n        return t.threadLocals;\n    }\n```\nThreadLocal所有的操作都是围绕着内部类ThreadLocalMap的，ThreadLocal只是让ThreadLocalMap更加容易访问。咦，有点耳熟，没错外观模式。\n\n下面看一下ThreadLocal的静态内部类ThreadLocalMap，JDK文档对它的描述主要集中在一下几点：\n\n1. 是什么：定制的hash map用于维护本地线程变量\n2. 可见性：ThreadLocal之外没有任何方法可访问，Thread类使用它定义了私有属性\n3. 特殊性：为了管理大对象、长生命周期对象，使用WeakReference包装ThreadLocal对象作为key\n\n前面两点没什么好说的，主要是第三点：key使用了弱引用类型管理（关于弱引用可以先参考https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/jvm/reference/ReferenceTest.java，后面我会单独写文章记录Java引用的使用，先挖个坑）。\n\n![image](http://img.blog.csdn.net/20160121000731607)\n\n图片来自互联网，实线表示强引用，虚线表示弱引用。\n\n简而言之，一个对象在没有强引用引用，只有弱引用引用时，当GC发生这个对象就会被标记回收。将ThreadLocal对象设置成弱引用作为key的好处是显而易见：当ThreadLocal没有任何强引用引用时，只有ThreadLocalMap的Entry对它存在弱引用，这样GC的时候这个ThreadLocal对象就可以被回收了。但是这又带来了一个问题：Entry的key可能被回收了，但留下了一个并没有什么卵用的value。只要线程生命周期不结束，那么这个value对象始终保持了一个强引用链条：\n\nThread Ref -> Thread -> ThreadLocalMap -> Entry -> value\n\n当内存有大量驻留的线程时，因为强引用存在，GC始终无法回收，就导致了内存泄漏。\n\n真对这个问题ThreadLocalMap在实现的时候也采取了一些防护措施，比如ThreadLocalMap的get（set，remove方法也类似，限于篇幅不展开了）：\n\n```java\n    private Entry getEntry(ThreadLocal<?> key) {\n        // hash函数获取索引位置\n        int i = key.threadLocalHashCode & (table.length - 1);\n        Entry e = table[i];\n        if (e != null && e.get() == key)\n            // 命中了\n            return e;\n        else\n            // miss了\n            return getEntryAfterMiss(key, i, e);\n    }\n\n    private Entry getEntryAfterMiss(ThreadLocal<?> key, int i, Entry e) {\n        Entry[] tab = table;\n        int len = tab.length;\n\t\t\n        // 遍历table\n        while (e != null) {\n            ThreadLocal<?> k = e.get();\n            if (k == key)\n                // 找到了\n                return e;\n            if (k == null)\n                // 发现key为空（也就是上面描述的内存泄漏的情况），做删除\n                expungeStaleEntry(i);\n            else\n                // 找下一个Entty位置\n                i = nextIndex(i, len);\n            e = tab[i];\n        }\n        return null;\n    }\n```\n\n在get的过程中凡是碰到了key为null的Entry，这个Entry就会被擦除，从而避免内存泄漏。类似的思路在set，remove方法中都有实现。针对内存泄漏问题ThreadLocal实际是需要手动触发函数删除key为null的Entry，所以当不要再需要一个变量当定到线程时手动的remove还是很有必要的。\n\n\n\n最后，在网上看到对ThreadLocal有多种说法：ThreadLocal为解决多线程程序的并发问题提供了一种新的思路；ThreadLocal的目的是为了解决多线程访问资源时的共享问题。\n\n关于第一种说法我觉得是部分正确的，ThreadLocal将需要共享的对象封闭在了线程内确实解决了并发的一部分问题，但并不是万能的。比如重写initialValue方法时返回的是一个全局共享的对象，那实际上ThreadLocal只是把这个全局共享的对象又封装到了Thread对象里，ThreadLocal本身并没有做类似深拷贝的操作，因此这个变量依然是线程不安全的（逸出）。\n\n关于第二种说法，我觉得问题就比较大了。ThreadLocal根本不是为了线程间共享，实际是为了将状态封闭在线程内以确保线程安全。这样做确实带来了访问共享状态的便利，但这个状态的共享是在单个线程内的，而不是线程之间的。比如在action中将session对象绑定在线程内，在service、dao里都可以方便的共享，但所有的共享都是在单个的线程内部，而不是在多个的线程之间共享。\n\n\n\n参考资料：\n\n《Java并发编程实战》\n\nJDK8帮助手册\n\nhttp://qifuguang.me/2015/09/02/[Java%E5%B9%B6%E5%8F%91%E5%8C%85%E5%AD%A6%E4%B9%A0%E4%B8%83]%E8%A7%A3%E5%AF%86ThreadLocal/\n\nhttp://my.oschina.net/xianggao/blog/392440#navbar-header\n","slug":"ThreadLocal小记","published":1,"updated":"2016-09-11T11:38:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citnw6vrr0006yn2e54rn2by0","content":"<h1 id=\"ThreadLocal\"><a href=\"#ThreadLocal\" class=\"headerlink\" title=\"ThreadLocal\"></a>ThreadLocal</h1><p>最近《Java并发编程实战》第三章谈及了对象共享的问题。对共享的可变数据最简单粗暴的做法当然是同步，但是同步的缺点也很明显，代码复杂可维护性降低。针对这个问题，书上谈及到了通过线程封闭避免同步，其中的ThreadLocal类就是帮助维持线程封闭性的。</p>\n<p>之前对ThreadLocal的认识非常简单，就是把一个变量绑定到线程上。参照网上的例子自己也实现了类似功能的例子ThreadLocalVariable(<a href=\"https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/thread/ThreadLocalVariable.java)，但总的来说没什么体会。今天参照别人的文章看了一下ThreadLocal的实现，发现还是有蛮多注意点的。\" target=\"_blank\" rel=\"external\">https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/thread/ThreadLocalVariable.java)，但总的来说没什么体会。今天参照别人的文章看了一下ThreadLocal的实现，发现还是有蛮多注意点的。</a></p>\n<p>看JDK之前想当然的以为ThreadLocal应该就是简单对<code>Map&lt;Thread, Object&gt;</code>做一个封装，然而实际并没有这么简单。参照了网上一些文章的说法，早期的ThreadLocal确实是这样实现的。但是这样实现存在一些问题：</p>\n<ol>\n<li>线程安全问题，如果使用线程安全的Map实现那么就会带来性能问题，当有大量的线程使用ThreadLocal，伴随着线程生命周期ThreadLocal也需要频繁向底层的Map添加删除数据。</li>\n<li>内存回收问题，用Thread当key，除非手动调用remove，否则即使线程退出了会导致：1)该Thread对象无法回收；2)该线程在所有ThreadLocal中对应的value也无法回收。</li>\n</ol>\n<p>ThreadLocal实际给出了不同的实现方式。首先绑定到线程的变量没有维护在ThreadLocal内，而是维护在各个Thread类实例内——在Thread类内使用了ThreadLocal的静态内部类<code>ThreadLocalMap</code>实例去维护需要绑定到线程的变量。这样原本需要维护在ThreadLocal内的数据现在就分散到了各个线程内去维护。</p>\n<p>在Thread中ThreadLocalMap的声明长这样：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 真的就只是声明了一下，什么都没干    </span></div><div class=\"line\">ThreadLocal.ThreadLocalMap threadLocals = <span class=\"keyword\">null</span>;</div></pre></td></tr></table></figure>\n<p>ThreadLocal一共只有五个非私有的方法，首先是两个并没有什么卵用的方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 构造，什么都没干</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ThreadLocal</span><span class=\"params\">()</span> </span>&#123;&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 设置ThreadLocal的初始值，protected很明显是希望子类重写</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> T <span class=\"title\">initialValue</span><span class=\"params\">()</span> </span>&#123;<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>&#125;</div></pre></td></tr></table></figure>\n<p>看看其余三个方法的实现（JDK8）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    Thread t = Thread.currentThread();</div><div class=\"line\">    <span class=\"comment\">// 从线程里获取ThreadLocalMap</span></div><div class=\"line\">    ThreadLocalMap map = getMap(t);</div><div class=\"line\">    <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">// 根据ThreadLocal实例获取Entity</span></div><div class=\"line\">        <span class=\"comment\">// 一会看ThreadLocal的实现</span></div><div class=\"line\">        <span class=\"comment\">// 暂时可以看做类似Map&lt;ThreadLocal,Object&gt;</span></div><div class=\"line\">        <span class=\"comment\">// 注意key类型是ThreadLocal，不是Thread</span></div><div class=\"line\">        ThreadLocalMap.Entry e = map.getEntry(<span class=\"keyword\">this</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (e != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">            T result = (T)e.value;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">// 如果获得的map为null或者从map通过key获取的value为空时获取一个初始值</span></div><div class=\"line\">    <span class=\"comment\">// setInitialValue方法里调用了initialValue方法</span></div><div class=\"line\">    <span class=\"comment\">// 宝宝不管，反正宝宝想要有值，宝宝不想为null</span></div><div class=\"line\">    <span class=\"keyword\">return</span> setInitialValue();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(T value)</span> </span>&#123;</div><div class=\"line\">    Thread t = Thread.currentThread();</div><div class=\"line\">    ThreadLocalMap map = getMap(t);</div><div class=\"line\">    <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>)</div><div class=\"line\">        <span class=\"comment\">// 没什么说的set进去</span></div><div class=\"line\">        map.set(<span class=\"keyword\">this</span>, value);</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">        <span class=\"comment\">// 当map不存在时，使用初始值创建一个</span></div><div class=\"line\">        createMap(t, value);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">     ThreadLocalMap m = getMap(Thread.currentThread());</div><div class=\"line\">     <span class=\"keyword\">if</span> (m != <span class=\"keyword\">null</span>)</div><div class=\"line\">         <span class=\"comment\">// 没什么说的，remove掉</span></div><div class=\"line\">         m.remove(<span class=\"keyword\">this</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">ThreadLocalMap <span class=\"title\">getMap</span><span class=\"params\">(Thread t)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 你给我一个线程，我换你一个map</span></div><div class=\"line\">    <span class=\"keyword\">return</span> t.threadLocals;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>ThreadLocal所有的操作都是围绕着内部类ThreadLocalMap的，ThreadLocal只是让ThreadLocalMap更加容易访问。咦，有点耳熟，没错外观模式。</p>\n<p>下面看一下ThreadLocal的静态内部类ThreadLocalMap，JDK文档对它的描述主要集中在一下几点：</p>\n<ol>\n<li>是什么：定制的hash map用于维护本地线程变量</li>\n<li>可见性：ThreadLocal之外没有任何方法可访问，Thread类使用它定义了私有属性</li>\n<li>特殊性：为了管理大对象、长生命周期对象，使用WeakReference包装ThreadLocal对象作为key</li>\n</ol>\n<p>前面两点没什么好说的，主要是第三点：key使用了弱引用类型管理（关于弱引用可以先参考<a href=\"https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/jvm/reference/ReferenceTest.java，后面我会单独写文章记录Java引用的使用，先挖个坑）。\" target=\"_blank\" rel=\"external\">https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/jvm/reference/ReferenceTest.java，后面我会单独写文章记录Java引用的使用，先挖个坑）。</a></p>\n<p><img src=\"http://img.blog.csdn.net/20160121000731607\" alt=\"image\"></p>\n<p>图片来自互联网，实线表示强引用，虚线表示弱引用。</p>\n<p>简而言之，一个对象在没有强引用引用，只有弱引用引用时，当GC发生这个对象就会被标记回收。将ThreadLocal对象设置成弱引用作为key的好处是显而易见：当ThreadLocal没有任何强引用引用时，只有ThreadLocalMap的Entry对它存在弱引用，这样GC的时候这个ThreadLocal对象就可以被回收了。但是这又带来了一个问题：Entry的key可能被回收了，但留下了一个并没有什么卵用的value。只要线程生命周期不结束，那么这个value对象始终保持了一个强引用链条：</p>\n<p>Thread Ref -&gt; Thread -&gt; ThreadLocalMap -&gt; Entry -&gt; value</p>\n<p>当内存有大量驻留的线程时，因为强引用存在，GC始终无法回收，就导致了内存泄漏。</p>\n<p>真对这个问题ThreadLocalMap在实现的时候也采取了一些防护措施，比如ThreadLocalMap的get（set，remove方法也类似，限于篇幅不展开了）：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Entry <span class=\"title\">getEntry</span><span class=\"params\">(ThreadLocal&lt;?&gt; key)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// hash函数获取索引位置</span></div><div class=\"line\">    <span class=\"keyword\">int</span> i = key.threadLocalHashCode &amp; (table.length - <span class=\"number\">1</span>);</div><div class=\"line\">    Entry e = table[i];</div><div class=\"line\">    <span class=\"keyword\">if</span> (e != <span class=\"keyword\">null</span> &amp;&amp; e.get() == key)</div><div class=\"line\">        <span class=\"comment\">// 命中了</span></div><div class=\"line\">        <span class=\"keyword\">return</span> e;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">        <span class=\"comment\">// miss了</span></div><div class=\"line\">        <span class=\"keyword\">return</span> getEntryAfterMiss(key, i, e);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Entry <span class=\"title\">getEntryAfterMiss</span><span class=\"params\">(ThreadLocal&lt;?&gt; key, <span class=\"keyword\">int</span> i, Entry e)</span> </span>&#123;</div><div class=\"line\">    Entry[] tab = table;</div><div class=\"line\">    <span class=\"keyword\">int</span> len = tab.length;</div><div class=\"line\">\t\t</div><div class=\"line\">    <span class=\"comment\">// 遍历table</span></div><div class=\"line\">    <span class=\"keyword\">while</span> (e != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        ThreadLocal&lt;?&gt; k = e.get();</div><div class=\"line\">        <span class=\"keyword\">if</span> (k == key)</div><div class=\"line\">            <span class=\"comment\">// 找到了</span></div><div class=\"line\">            <span class=\"keyword\">return</span> e;</div><div class=\"line\">        <span class=\"keyword\">if</span> (k == <span class=\"keyword\">null</span>)</div><div class=\"line\">            <span class=\"comment\">// 发现key为空（也就是上面描述的内存泄漏的情况），做删除</span></div><div class=\"line\">            expungeStaleEntry(i);</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">            <span class=\"comment\">// 找下一个Entty位置</span></div><div class=\"line\">            i = nextIndex(i, len);</div><div class=\"line\">        e = tab[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在get的过程中凡是碰到了key为null的Entry，这个Entry就会被擦除，从而避免内存泄漏。类似的思路在set，remove方法中都有实现。针对内存泄漏问题ThreadLocal实际是需要手动触发函数删除key为null的Entry，所以当不要再需要一个变量当定到线程时手动的remove还是很有必要的。</p>\n<p>最后，在网上看到对ThreadLocal有多种说法：ThreadLocal为解决多线程程序的并发问题提供了一种新的思路；ThreadLocal的目的是为了解决多线程访问资源时的共享问题。</p>\n<p>关于第一种说法我觉得是部分正确的，ThreadLocal将需要共享的对象封闭在了线程内确实解决了并发的一部分问题，但并不是万能的。比如重写initialValue方法时返回的是一个全局共享的对象，那实际上ThreadLocal只是把这个全局共享的对象又封装到了Thread对象里，ThreadLocal本身并没有做类似深拷贝的操作，因此这个变量依然是线程不安全的（逸出）。</p>\n<p>关于第二种说法，我觉得问题就比较大了。ThreadLocal根本不是为了线程间共享，实际是为了将状态封闭在线程内以确保线程安全。这样做确实带来了访问共享状态的便利，但这个状态的共享是在单个线程内的，而不是线程之间的。比如在action中将session对象绑定在线程内，在service、dao里都可以方便的共享，但所有的共享都是在单个的线程内部，而不是在多个的线程之间共享。</p>\n<p>参考资料：</p>\n<p>《Java并发编程实战》</p>\n<p>JDK8帮助手册</p>\n<p><a href=\"http://qifuguang.me/2015/09/02/[Java%E5%B9%B6%E5%8F%91%E5%8C%85%E5%AD%A6%E4%B9%A0%E4%B8%83]%E8%A7%A3%E5%AF%86ThreadLocal/\" target=\"_blank\" rel=\"external\">http://qifuguang.me/2015/09/02/[Java%E5%B9%B6%E5%8F%91%E5%8C%85%E5%AD%A6%E4%B9%A0%E4%B8%83]%E8%A7%A3%E5%AF%86ThreadLocal/</a></p>\n<p><a href=\"http://my.oschina.net/xianggao/blog/392440#navbar-header\" target=\"_blank\" rel=\"external\">http://my.oschina.net/xianggao/blog/392440#navbar-header</a></p>\n","excerpt":"","more":"<h1 id=\"ThreadLocal\"><a href=\"#ThreadLocal\" class=\"headerlink\" title=\"ThreadLocal\"></a>ThreadLocal</h1><p>最近《Java并发编程实战》第三章谈及了对象共享的问题。对共享的可变数据最简单粗暴的做法当然是同步，但是同步的缺点也很明显，代码复杂可维护性降低。针对这个问题，书上谈及到了通过线程封闭避免同步，其中的ThreadLocal类就是帮助维持线程封闭性的。</p>\n<p>之前对ThreadLocal的认识非常简单，就是把一个变量绑定到线程上。参照网上的例子自己也实现了类似功能的例子ThreadLocalVariable(<a href=\"https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/thread/ThreadLocalVariable.java)，但总的来说没什么体会。今天参照别人的文章看了一下ThreadLocal的实现，发现还是有蛮多注意点的。\">https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/thread/ThreadLocalVariable.java)，但总的来说没什么体会。今天参照别人的文章看了一下ThreadLocal的实现，发现还是有蛮多注意点的。</a></p>\n<p>看JDK之前想当然的以为ThreadLocal应该就是简单对<code>Map&lt;Thread, Object&gt;</code>做一个封装，然而实际并没有这么简单。参照了网上一些文章的说法，早期的ThreadLocal确实是这样实现的。但是这样实现存在一些问题：</p>\n<ol>\n<li>线程安全问题，如果使用线程安全的Map实现那么就会带来性能问题，当有大量的线程使用ThreadLocal，伴随着线程生命周期ThreadLocal也需要频繁向底层的Map添加删除数据。</li>\n<li>内存回收问题，用Thread当key，除非手动调用remove，否则即使线程退出了会导致：1)该Thread对象无法回收；2)该线程在所有ThreadLocal中对应的value也无法回收。</li>\n</ol>\n<p>ThreadLocal实际给出了不同的实现方式。首先绑定到线程的变量没有维护在ThreadLocal内，而是维护在各个Thread类实例内——在Thread类内使用了ThreadLocal的静态内部类<code>ThreadLocalMap</code>实例去维护需要绑定到线程的变量。这样原本需要维护在ThreadLocal内的数据现在就分散到了各个线程内去维护。</p>\n<p>在Thread中ThreadLocalMap的声明长这样：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 真的就只是声明了一下，什么都没干    </span></div><div class=\"line\">ThreadLocal.ThreadLocalMap threadLocals = <span class=\"keyword\">null</span>;</div></pre></td></tr></table></figure>\n<p>ThreadLocal一共只有五个非私有的方法，首先是两个并没有什么卵用的方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 构造，什么都没干</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ThreadLocal</span><span class=\"params\">()</span> </span>&#123;&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 设置ThreadLocal的初始值，protected很明显是希望子类重写</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> T <span class=\"title\">initialValue</span><span class=\"params\">()</span> </span>&#123;<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>&#125;</div></pre></td></tr></table></figure>\n<p>看看其余三个方法的实现（JDK8）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    Thread t = Thread.currentThread();</div><div class=\"line\">    <span class=\"comment\">// 从线程里获取ThreadLocalMap</span></div><div class=\"line\">    ThreadLocalMap map = getMap(t);</div><div class=\"line\">    <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">// 根据ThreadLocal实例获取Entity</span></div><div class=\"line\">        <span class=\"comment\">// 一会看ThreadLocal的实现</span></div><div class=\"line\">        <span class=\"comment\">// 暂时可以看做类似Map&lt;ThreadLocal,Object&gt;</span></div><div class=\"line\">        <span class=\"comment\">// 注意key类型是ThreadLocal，不是Thread</span></div><div class=\"line\">        ThreadLocalMap.Entry e = map.getEntry(<span class=\"keyword\">this</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (e != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</div><div class=\"line\">            T result = (T)e.value;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">// 如果获得的map为null或者从map通过key获取的value为空时获取一个初始值</span></div><div class=\"line\">    <span class=\"comment\">// setInitialValue方法里调用了initialValue方法</span></div><div class=\"line\">    <span class=\"comment\">// 宝宝不管，反正宝宝想要有值，宝宝不想为null</span></div><div class=\"line\">    <span class=\"keyword\">return</span> setInitialValue();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(T value)</span> </span>&#123;</div><div class=\"line\">    Thread t = Thread.currentThread();</div><div class=\"line\">    ThreadLocalMap map = getMap(t);</div><div class=\"line\">    <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>)</div><div class=\"line\">        <span class=\"comment\">// 没什么说的set进去</span></div><div class=\"line\">        map.set(<span class=\"keyword\">this</span>, value);</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">        <span class=\"comment\">// 当map不存在时，使用初始值创建一个</span></div><div class=\"line\">        createMap(t, value);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">     ThreadLocalMap m = getMap(Thread.currentThread());</div><div class=\"line\">     <span class=\"keyword\">if</span> (m != <span class=\"keyword\">null</span>)</div><div class=\"line\">         <span class=\"comment\">// 没什么说的，remove掉</span></div><div class=\"line\">         m.remove(<span class=\"keyword\">this</span>);</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">ThreadLocalMap <span class=\"title\">getMap</span><span class=\"params\">(Thread t)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 你给我一个线程，我换你一个map</span></div><div class=\"line\">    <span class=\"keyword\">return</span> t.threadLocals;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>ThreadLocal所有的操作都是围绕着内部类ThreadLocalMap的，ThreadLocal只是让ThreadLocalMap更加容易访问。咦，有点耳熟，没错外观模式。</p>\n<p>下面看一下ThreadLocal的静态内部类ThreadLocalMap，JDK文档对它的描述主要集中在一下几点：</p>\n<ol>\n<li>是什么：定制的hash map用于维护本地线程变量</li>\n<li>可见性：ThreadLocal之外没有任何方法可访问，Thread类使用它定义了私有属性</li>\n<li>特殊性：为了管理大对象、长生命周期对象，使用WeakReference包装ThreadLocal对象作为key</li>\n</ol>\n<p>前面两点没什么好说的，主要是第三点：key使用了弱引用类型管理（关于弱引用可以先参考<a href=\"https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/jvm/reference/ReferenceTest.java，后面我会单独写文章记录Java引用的使用，先挖个坑）。\">https://github.com/zhanghTK/HelloJava/blob/master/src/main/java/tk/zhangh/java/jvm/reference/ReferenceTest.java，后面我会单独写文章记录Java引用的使用，先挖个坑）。</a></p>\n<p><img src=\"http://img.blog.csdn.net/20160121000731607\" alt=\"image\"></p>\n<p>图片来自互联网，实线表示强引用，虚线表示弱引用。</p>\n<p>简而言之，一个对象在没有强引用引用，只有弱引用引用时，当GC发生这个对象就会被标记回收。将ThreadLocal对象设置成弱引用作为key的好处是显而易见：当ThreadLocal没有任何强引用引用时，只有ThreadLocalMap的Entry对它存在弱引用，这样GC的时候这个ThreadLocal对象就可以被回收了。但是这又带来了一个问题：Entry的key可能被回收了，但留下了一个并没有什么卵用的value。只要线程生命周期不结束，那么这个value对象始终保持了一个强引用链条：</p>\n<p>Thread Ref -&gt; Thread -&gt; ThreadLocalMap -&gt; Entry -&gt; value</p>\n<p>当内存有大量驻留的线程时，因为强引用存在，GC始终无法回收，就导致了内存泄漏。</p>\n<p>真对这个问题ThreadLocalMap在实现的时候也采取了一些防护措施，比如ThreadLocalMap的get（set，remove方法也类似，限于篇幅不展开了）：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Entry <span class=\"title\">getEntry</span><span class=\"params\">(ThreadLocal&lt;?&gt; key)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// hash函数获取索引位置</span></div><div class=\"line\">    <span class=\"keyword\">int</span> i = key.threadLocalHashCode &amp; (table.length - <span class=\"number\">1</span>);</div><div class=\"line\">    Entry e = table[i];</div><div class=\"line\">    <span class=\"keyword\">if</span> (e != <span class=\"keyword\">null</span> &amp;&amp; e.get() == key)</div><div class=\"line\">        <span class=\"comment\">// 命中了</span></div><div class=\"line\">        <span class=\"keyword\">return</span> e;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">        <span class=\"comment\">// miss了</span></div><div class=\"line\">        <span class=\"keyword\">return</span> getEntryAfterMiss(key, i, e);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Entry <span class=\"title\">getEntryAfterMiss</span><span class=\"params\">(ThreadLocal&lt;?&gt; key, <span class=\"keyword\">int</span> i, Entry e)</span> </span>&#123;</div><div class=\"line\">    Entry[] tab = table;</div><div class=\"line\">    <span class=\"keyword\">int</span> len = tab.length;</div><div class=\"line\">\t\t</div><div class=\"line\">    <span class=\"comment\">// 遍历table</span></div><div class=\"line\">    <span class=\"keyword\">while</span> (e != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        ThreadLocal&lt;?&gt; k = e.get();</div><div class=\"line\">        <span class=\"keyword\">if</span> (k == key)</div><div class=\"line\">            <span class=\"comment\">// 找到了</span></div><div class=\"line\">            <span class=\"keyword\">return</span> e;</div><div class=\"line\">        <span class=\"keyword\">if</span> (k == <span class=\"keyword\">null</span>)</div><div class=\"line\">            <span class=\"comment\">// 发现key为空（也就是上面描述的内存泄漏的情况），做删除</span></div><div class=\"line\">            expungeStaleEntry(i);</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">            <span class=\"comment\">// 找下一个Entty位置</span></div><div class=\"line\">            i = nextIndex(i, len);</div><div class=\"line\">        e = tab[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在get的过程中凡是碰到了key为null的Entry，这个Entry就会被擦除，从而避免内存泄漏。类似的思路在set，remove方法中都有实现。针对内存泄漏问题ThreadLocal实际是需要手动触发函数删除key为null的Entry，所以当不要再需要一个变量当定到线程时手动的remove还是很有必要的。</p>\n<p>最后，在网上看到对ThreadLocal有多种说法：ThreadLocal为解决多线程程序的并发问题提供了一种新的思路；ThreadLocal的目的是为了解决多线程访问资源时的共享问题。</p>\n<p>关于第一种说法我觉得是部分正确的，ThreadLocal将需要共享的对象封闭在了线程内确实解决了并发的一部分问题，但并不是万能的。比如重写initialValue方法时返回的是一个全局共享的对象，那实际上ThreadLocal只是把这个全局共享的对象又封装到了Thread对象里，ThreadLocal本身并没有做类似深拷贝的操作，因此这个变量依然是线程不安全的（逸出）。</p>\n<p>关于第二种说法，我觉得问题就比较大了。ThreadLocal根本不是为了线程间共享，实际是为了将状态封闭在线程内以确保线程安全。这样做确实带来了访问共享状态的便利，但这个状态的共享是在单个线程内的，而不是线程之间的。比如在action中将session对象绑定在线程内，在service、dao里都可以方便的共享，但所有的共享都是在单个的线程内部，而不是在多个的线程之间共享。</p>\n<p>参考资料：</p>\n<p>《Java并发编程实战》</p>\n<p>JDK8帮助手册</p>\n<p><a href=\"http://qifuguang.me/2015/09/02/[Java%E5%B9%B6%E5%8F%91%E5%8C%85%E5%AD%A6%E4%B9%A0%E4%B8%83]%E8%A7%A3%E5%AF%86ThreadLocal/\">http://qifuguang.me/2015/09/02/[Java%E5%B9%B6%E5%8F%91%E5%8C%85%E5%AD%A6%E4%B9%A0%E4%B8%83]%E8%A7%A3%E5%AF%86ThreadLocal/</a></p>\n<p><a href=\"http://my.oschina.net/xianggao/blog/392440#navbar-header\">http://my.oschina.net/xianggao/blog/392440#navbar-header</a></p>\n"},{"title":"《Java并发编程实战》读书笔记","date":"2016-09-29T05:14:27.000Z","_content":"右键->新标签页中打开图片->放大预览\n![Java并发编程实战.png](https://ooo.0o0.ooo/2016/09/29/57eca40868441.png)\n","source":"_posts/《Java并发编程实战》读书笔记.md","raw":"---\ntitle: 《Java并发编程实战》读书笔记\ndate: 2016-09-29 13:14:27\ntags:\n  - Java\ncategories: 读书笔记\n---\n右键->新标签页中打开图片->放大预览\n![Java并发编程实战.png](https://ooo.0o0.ooo/2016/09/29/57eca40868441.png)\n","slug":"《Java并发编程实战》读书笔记","published":1,"updated":"2016-09-29T05:23:24.000Z","_id":"citnw6vrt0008yn2etq1ybqf8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>右键-&gt;新标签页中打开图片-&gt;放大预览<br><img src=\"https://ooo.0o0.ooo/2016/09/29/57eca40868441.png\" alt=\"Java并发编程实战.png\"></p>\n","excerpt":"","more":"<p>右键-&gt;新标签页中打开图片-&gt;放大预览<br><img src=\"https://ooo.0o0.ooo/2016/09/29/57eca40868441.png\" alt=\"Java并发编程实战.png\"></p>\n"},{"title":"《函数式编程思维》读书笔记","date":"2016-08-27T14:20:48.000Z","_content":"\n![函数式编程思维.png](http://i2.buimg.com/4851/efe49260863d5566.png)","source":"_posts/《函数式编程思维》读书笔记.md","raw":"---\ntitle: 《函数式编程思维》读书笔记\ndate: 2016-08-27 22:20:48\ntags:\n  - Functional\ncategories: 读书笔记\n---\n\n![函数式编程思维.png](http://i2.buimg.com/4851/efe49260863d5566.png)","slug":"《函数式编程思维》读书笔记","published":1,"updated":"2016-08-27T14:35:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citnw6vrv000ayn2e88og1fc1","content":"<p><img src=\"http://i2.buimg.com/4851/efe49260863d5566.png\" alt=\"函数式编程思维.png\"></p>\n","excerpt":"","more":"<p><img src=\"http://i2.buimg.com/4851/efe49260863d5566.png\" alt=\"函数式编程思维.png\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"citnw6vr80000yn2esx1ygs4f","category_id":"citnw6vrp0005yn2epq5hctcv","_id":"citnw6vrx000cyn2et0srz88s"},{"post_id":"citnw6vre0002yn2e0gy78ce5","category_id":"citnw6vrw000byn2exahv3r1n","_id":"citnw6vs1000hyn2e194j38k7"},{"post_id":"citnw6vrr0006yn2e54rn2by0","category_id":"citnw6vrw000byn2exahv3r1n","_id":"citnw6vs2000kyn2ecvy93dt3"},{"post_id":"citnw6vrt0008yn2etq1ybqf8","category_id":"citnw6vs1000iyn2e6cqyyrao","_id":"citnw6vs3000nyn2el27crtk5"},{"post_id":"citnw6vrv000ayn2e88og1fc1","category_id":"citnw6vs1000iyn2e6cqyyrao","_id":"citnw6vs4000qyn2e66tdu4ua"}],"PostTag":[{"post_id":"citnw6vr80000yn2esx1ygs4f","tag_id":"citnw6vri0004yn2e1wbfyhph","_id":"citnw6vs0000fyn2e17pe7h2l"},{"post_id":"citnw6vr80000yn2esx1ygs4f","tag_id":"citnw6vru0009yn2eu4hnuolu","_id":"citnw6vs1000gyn2e9xu10tsf"},{"post_id":"citnw6vre0002yn2e0gy78ce5","tag_id":"citnw6vrx000dyn2ezpb6vn4g","_id":"citnw6vs4000pyn2e5cyu3w7c"},{"post_id":"citnw6vre0002yn2e0gy78ce5","tag_id":"citnw6vs1000jyn2eaowxt2f2","_id":"citnw6vs4000ryn2erh5vmm58"},{"post_id":"citnw6vre0002yn2e0gy78ce5","tag_id":"citnw6vs2000myn2e4d3sssyr","_id":"citnw6vs5000tyn2envadueic"},{"post_id":"citnw6vrr0006yn2e54rn2by0","tag_id":"citnw6vs2000myn2e4d3sssyr","_id":"citnw6vs5000uyn2e4g6228i0"},{"post_id":"citnw6vrt0008yn2etq1ybqf8","tag_id":"citnw6vs2000myn2e4d3sssyr","_id":"citnw6vs6000wyn2ef5f5zk1u"},{"post_id":"citnw6vrv000ayn2e88og1fc1","tag_id":"citnw6vs6000vyn2eye9o6a2c","_id":"citnw6vs7000xyn2ennmk9cqc"}],"Tag":[{"name":"HTML","_id":"citnw6vri0004yn2e1wbfyhph"},{"name":"CSS","_id":"citnw6vru0009yn2eu4hnuolu"},{"name":"daily","_id":"citnw6vrx000dyn2ezpb6vn4g"},{"name":"JVM","_id":"citnw6vs1000jyn2eaowxt2f2"},{"name":"Java","_id":"citnw6vs2000myn2e4d3sssyr"},{"name":"Functional","_id":"citnw6vs6000vyn2eye9o6a2c"}]}}